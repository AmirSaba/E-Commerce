[{"/home/karim/Bureau/ProjetWeb/frontend/src/index.js":"1","/home/karim/Bureau/ProjetWeb/frontend/src/App.js":"2","/home/karim/Bureau/ProjetWeb/frontend/src/reportWebVitals.js":"3","/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Login.js":"4","/home/karim/Bureau/ProjetWeb/frontend/src/firebase.js":"5","/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Signup.js":"6","/home/karim/Bureau/ProjetWeb/frontend/src/Component/PageHome.js":"7"},{"size":500,"mtime":1607433048657,"results":"8","hashOfConfig":"9"},{"size":1496,"mtime":1607877965085,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607433048657,"results":"11","hashOfConfig":"9"},{"size":5765,"mtime":1607883070105,"results":"12","hashOfConfig":"9"},{"size":632,"mtime":1607618581081,"results":"13","hashOfConfig":"9"},{"size":6334,"mtime":1607882817986,"results":"14","hashOfConfig":"9"},{"size":371,"mtime":1607880890062,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1yfqtnl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/karim/Bureau/ProjetWeb/frontend/src/index.js",[],["32","33"],"/home/karim/Bureau/ProjetWeb/frontend/src/App.js",[],"/home/karim/Bureau/ProjetWeb/frontend/src/reportWebVitals.js",[],"/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Login.js",["34","35","36","37","38","39","40","41","42"],"/home/karim/Bureau/ProjetWeb/frontend/src/firebase.js",[],"/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Signup.js",["43","44"],"import React from \"react\";\nimport { Drawer, Form, Input, Button } from \"antd\";\nimport \"./Signup.css\";\nimport { UserOutlined, UnlockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      MessageError : null, \n      ContenuMessageError : \"\", // Le contenu du message d'erreur lors de la création du compte ( si il y'en a)\n      email: \"\",\n      MotDePasse: \"\",\n      ConfirmationMotDePasse: \"\",\n      MessageSucces : false,\n      MotDePasseDifferent: false,\n    };\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    }); \n  };\n\n  render() {\n    return (\n      <div>\n        <a style={{ color: \"blue\" }} onClick={this.showDrawer}>\n          SignUp\n        </a>\n\n        <Drawer\n          title=\"Insciption\"\n          width={720}\n          onClose={this.onClose}\n          visible={this.state.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: \"right\",\n              }}\n            >\n              <Button className=\"Bin2\" onClick={this.onClose}>\n                Cancel\n              </Button>\n           \n                <Button\n                  className=\"Bin2\"\n                  onClick={() => {\n                    if (\n                      this.state.MotDePasse ===\n                      this.state.ConfirmationMotDePasse\n                    ) {\n                      const obj = {\n                        email : this.state.email,\n                        password : this.state.MotDePasse\n                        \n                      }\n                      // axios permet de faire la relation frontend backend\n                      // dans cet exemple elle est utilisée pour le signup d'un nouveau utilisateur\n                      // la fonction qui permet le signup est dans le backend\n\n                      axios.post(\"http://localhost:5001/SignUp/signup\", obj).then((res) => {\n                         if(res.data.sent == true){\n                         // SI le compte est créer et l'email de vérification est envoyé\n                         // Un message de succés sera affiché\n\n                         this.setState({ MessageSucces : res.data.sent })}\n                         // Si le compte existe déja ou une adresse email invalide est entrée un message d'erreur sera affiché\n\n                         else this.setState({MessageError : true, ContenuMessageError : res.data.sent})\n                      });\n                    \n                    } else {\n                      this.setState({ MotDePasseDifferent: true });\n                    }\n\n                  }}\n                >\n                  Submit\n                </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\" hideRequiredMark>\n            <Form.Item\n              name=\"name\"\n              label=\"Email\"\n              rules={[{ required: true, message: \"Please enter Email\" }]}\n            >\n              <Input\n                size=\"large\"\n                value={this.state.email}\n                onChange={(event) => {\n                  this.setState({ email: event.target.value });\n                }}\n                placeholder=\"Email \"\n                className=\"input email\"\n                prefix={<UserOutlined />}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"Password\"\n              label=\"Password\"\n              rules={[\n                { required: true, message: \"Please enter user Password\" },\n              ]}\n            >\n              <Input\n                size=\"large\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={this.state.MotDePasse}\n                onChange={(event) => {\n                  this.setState({ MotDePasse: event.target.value });\n                }}\n                className=\"input email\"\n                prefix={<UnlockOutlined />}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"Confirmation Password\"\n              label=\"Confirmation Password\"\n              rules={[\n                { required: true, message: \"Please enter user Password\" },\n              ]}\n            >\n              <Input\n                size=\"large\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={this.state.ConfirmationMotDePasse}\n                onChange={(event) => {\n                  this.setState({ ConfirmationMotDePasse: event.target.value });\n                }}\n                className=\"input email\"\n                prefix={<UnlockOutlined />}\n              />\n            </Form.Item>\n            {this.state.MotDePasseDifferent && (\n              <Form.Item name=\"\" label=\"\">\n                {\" \"}\n                <text style={{ fontSize: 30 }}>\n                  {\" \"}\n                  Les Mot De Passe ne correspondent pas{\" \"}\n                </text>\n              </Form.Item>\n            )}\n             {this.state.MessageSucces && (\n               <div>\n              <Form.Item name=\"\" label=\"\">\n                {\" \"}\n                <text style={{ marginTop : 30, fontSize: 30 , color :'green' }}>\n                  {\" \"}\n                 Compte ajouté avec succées !\n                </text>\n                \n              </Form.Item>\n                            <Form.Item name=\"\" label=\"\">\n\n              <text style={{ marginTop : 20, fontSize: 17 , color :'blue',fontFamily : \"500\" }}>\n                  {\" \"}\n                Veuillez valider votre mail par le lien envoyé, pour pouvoir se connecter\n                </text>\n                </Form.Item>\n                </div>\n\n            )}\n             {this.state.MessageError && (\n               <div>\n              <Form.Item name=\"\" label=\"\">\n                {\" \"}\n                <text style={{ marginTop : 30, fontSize: 24 , color :'red' }}>\n                  {this.state.ContenuMessageError}\n                </text>\n                \n              </Form.Item>\n            \n                </div>\n\n            )}\n            </Form> \n        </Drawer>\n      </div>\n    );\n  } \n}\n\nexport default Signup;\n","/home/karim/Bureau/ProjetWeb/frontend/src/Component/PageHome.js",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":22,"column":7,"nodeType":"52","endLine":22,"endColumn":41},{"ruleId":"53","severity":1,"message":"54","line":100,"column":31,"nodeType":"55","messageId":"56","endLine":100,"endColumn":40},{"ruleId":"53","severity":1,"message":"57","line":101,"column":31,"nodeType":"55","messageId":"56","endLine":101,"endColumn":43},{"ruleId":"53","severity":1,"message":"58","line":130,"column":31,"nodeType":"55","messageId":"56","endLine":130,"endColumn":36},{"ruleId":"53","severity":1,"message":"59","line":132,"column":31,"nodeType":"55","messageId":"56","endLine":132,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":138,"column":31,"nodeType":"55","messageId":"56","endLine":138,"endColumn":40},{"ruleId":"53","severity":1,"message":"57","line":139,"column":31,"nodeType":"55","messageId":"56","endLine":139,"endColumn":43},{"ruleId":"53","severity":1,"message":"60","line":141,"column":31,"nodeType":"55","messageId":"56","endLine":141,"endColumn":36},{"ruleId":"53","severity":1,"message":"61","line":143,"column":31,"nodeType":"55","messageId":"56","endLine":143,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":38,"column":9,"nodeType":"52","endLine":38,"endColumn":64},{"ruleId":"64","severity":1,"message":"65","line":75,"column":43,"nodeType":"66","messageId":"67","endLine":75,"endColumn":45},{"ruleId":"53","severity":1,"message":"68","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'errorCode' is assigned a value but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]