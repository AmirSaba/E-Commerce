[{"/home/karim/Bureau/ProjetWeb/frontend/src/index.js":"1","/home/karim/Bureau/ProjetWeb/frontend/src/App.js":"2","/home/karim/Bureau/ProjetWeb/frontend/src/reportWebVitals.js":"3","/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Login.js":"4","/home/karim/Bureau/ProjetWeb/frontend/src/firebase.js":"5","/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Signup.js":"6","/home/karim/Bureau/ProjetWeb/frontend/src/Component/PageHome.js":"7","/home/karim/Bureau/ProjetWeb/frontend/src/Component/Card.js":"8","/home/karim/Bureau/ProjetWeb/frontend/src/Component/Header.js":"9"},{"size":500,"mtime":1607433048657,"results":"10","hashOfConfig":"11"},{"size":1566,"mtime":1608547075319,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607433048657,"results":"13","hashOfConfig":"11"},{"size":5831,"mtime":1608413484283,"results":"14","hashOfConfig":"11"},{"size":632,"mtime":1607618581081,"results":"15","hashOfConfig":"11"},{"size":6311,"mtime":1608545493250,"results":"16","hashOfConfig":"11"},{"size":3357,"mtime":1608730727655,"results":"17","hashOfConfig":"11"},{"size":452,"mtime":1608730631682,"results":"18","hashOfConfig":"11"},{"size":2315,"mtime":1608730609330,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"z9o7i5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/karim/Bureau/ProjetWeb/frontend/src/index.js",[],["42","43"],"/home/karim/Bureau/ProjetWeb/frontend/src/App.js",["44"],"import React, { Component } from \"react\";\nimport './App.css';\nimport Login from './Authentification/Login';\nimport { auth } from \"./firebase\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PageHome from './Component/PageHome'\n\nimport axios from \"axios\";\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CurrentUser: null,\n    };\n  }\n\n  componentDidMount() {\n    auth.onAuthStateChanged((CurrentUser) => {\n      if (CurrentUser) {\n        let emailVerified = CurrentUser.emailVerified;\n        console.log(emailVerified);\n        console.log(\"Auth_Changed\", CurrentUser.email);\n        this.setState({ CurrentUser: CurrentUser,EmailVerified : emailVerified });\n      } else {\n        this.setState({ CurrentUser });\n        console.log(\"watt\");\n      }\n    });\n  }\n\n  render() {\n    const { CurrentUser } = this.state;\n    let { EmailVerified } = this.state;\n\n    return (\n        <Router>\n          <div>\n            <Switch>\n              {!CurrentUser && <Route exact path=\"\" component={Login} />}\n              {(CurrentUser && !EmailVerified) && (\n               <Route exact path=\"\" component={Login} />\n              )}\n              {(CurrentUser && EmailVerified) && (\n                <Route\n                  path=\"/PageHome\"\n                  exact\n                  component={() => <PageHome CurrentUser={CurrentUser}/>}\n                />  \n                 )}\n             \n            </Switch>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/karim/Bureau/ProjetWeb/frontend/src/reportWebVitals.js",[],"/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Login.js",["45","46","47","48","49","50","51","52","53"],"import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Form } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Signup from \"./Signup\";\nimport { auth, provider } from \"../firebase\";\nimport GoogleButton from \"react-google-button\";\n\nimport { Link } from \"react-router-dom\";\n\n\nfunction Login() {\n  const [email, setEmail] = useState();\n  const [MotDePasse, setMotDePasse] = useState();\n  const onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n  };\n  return (\n    <div className=\"wat\">\n      <h1 style={{ marginBottom: 200 }}></h1>\n      <svg\n        className=\"bingo\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 40 940 320\"\n      >\n        <path\n          className=\"bingo2\"\n          fill-opacity=\"1\"\n          d=\"M0,192L720,256L1440,96L1440,0L720,0L0,0Z\"\n        ></path>\n        <defs>\n          <linearGradient id=\"MyGradient\">\n            <stop offset=\"10%\" stop-color=\"#003D9C\" />\n            <stop offset=\"90%\" stop-color=\"#0064FF\" />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className=\"EnglobanteDes2Div\">\n        <div className=\"Englobante\">\n          <div className=\"englobanteLogin\">\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n            >\n              <h1 className=\"Titre\"> Welcome to E-commerce </h1>\n\n              <Form.Item\n                style={{ marginBottom: 30, marginTop: 90 }}\n                name=\"username\"\n                rules={[\n                  { required: true, message: \"Please input your Email!\" },\n                ]}\n              >\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Email\"\n                  className=\"InputS\"\n                  value={email}\n                  onChange={(event) => setEmail(event.target.value)}\n                />\n              </Form.Item>\n              <Form.Item\n                style={{ marginBottom: 37 }}\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"Please input your Password!\" },\n                ]}\n              >\n                <TextField\n                  id=\"standard-basic\"\n                  label=\"Password\"\n                  className=\"InputS\"\n                  type=\"password\"\n                  value={MotDePasse}\n                  onChange={(event) => setMotDePasse(event.target.value)}\n                />\n              </Form.Item>\n              <Form.Item\n                style={{ marginBottom: 30, marginTop: 0, marginLeft: 160 }}\n              >\n              <Link to=\"/PageHome\">\n\n               <Button\n                    className=\"ButtonLogin\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      // Une fois l'utilisateur créer il pourra s'authentifier avec cette methode ci-dessous\n                      auth\n                        .signInWithEmailAndPassword(email, MotDePasse)\n                        .then(() => {\n                          console.log(\"You're Sigin\");\n                        })\n                        .catch(function (error) {\n                          // Handle Errors here.\n                          var errorCode = error.code;\n                          var errorMessage = error.message;\n                          // ...\n                          console.log(error);\n                        });\n                    }}\n                    disableElevation\n                  >\n                    Sign in\n                  </Button>\n              </Link>\n              </Form.Item>\n\n              <Form.Item\n                style={{\n                  marginBottom: 30,\n                  marginTop: 20,\n                  marginLeft: 120,\n                  alignItems: \"center\",\n                }}\n              >\n                 <Link to=\"/PageHome\">\n\n                  <GoogleButton\n                    type=\"dark\"\n                    onClick={() => {\n                      // Ajout de la méthode d'authentification par google\n                      // elle est prédifinie par Firebase\n                      auth\n                        .signInWithPopup(provider)\n                        .then(function (result) {\n                          // This gives you a Google Access Token. You can use it to access the Google API.\n                          var token = result.credential.accessToken;\n                          // The signed-in user info.\n                          var user = result.user;\n                          // ...\n                        })\n\n                        .catch(function (error) {\n                          // Handle Errors here.\n                          var errorCode = error.code;\n                          var errorMessage = error.message;\n                          // The email of the user's account used.\n                          var email = error.email;\n                          // The firebase.auth.AuthCredential type that was used.\n                          var credential = error.credential;\n                          // ...\n                        });\n                    }}\n                  />\n                  </Link>\n              </Form.Item>\n\n              <Form.Item\n                style={{ marginBottom: 30, marginTop: 40, marginLeft: 85 }}\n              >\n                <text className=\"TextToSignUp\">\n                  Or, if you d'ont have an account ? <Signup />\n                </text>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n        <div className=\"photo\"> </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/karim/Bureau/ProjetWeb/frontend/src/firebase.js",[],"/home/karim/Bureau/ProjetWeb/frontend/src/Authentification/Signup.js",["54","55"],"import React from \"react\";\nimport { Drawer, Form, Input, Button } from \"antd\";\nimport \"./Signup.css\";\nimport { UserOutlined, UnlockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      MessageError : null, \n      ContenuMessageError : \"\", // Le contenu du message d'erreur lors de la création du compte ( si il y'en a)\n      email: \"\",\n      MotDePasse: \"\",\n      ConfirmationMotDePasse: \"\",\n      MessageSucces : false,\n      MotDePasseDifferent: false,\n    };\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    }); \n  };\n\n  render() {\n    return (\n      <div>\n        <a style={{ color: \"blue\" }} onClick={this.showDrawer}>\n          SignUp\n        </a>\n\n        <Drawer\n          title=\"Insciption\"\n          width={720}\n          onClose={this.onClose}\n          visible={this.state.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: \"right\",\n              }}\n            >\n              <Button className=\"Bin2\" onClick={this.onClose}>\n                Cancel\n              </Button>\n           \n                <Button\n                  className=\"Bin2\"\n                  onClick={() => {\n                    if (\n                      this.state.MotDePasse ===\n                      this.state.ConfirmationMotDePasse\n                    ) {\n                      const obj = {\n                        email : this.state.email,\n                        password : this.state.MotDePasse \n                       }\n                      // axios permet de faire la relation frontend backend\n                      // dans cet exemple elle est utilisée pour le signup d'un nouveau utilisateur\n                      // la fonction qui permet le signup est dans le backend\n\n                      axios.post(\"http://localhost:5001/SignUp/signup\", obj).then((res) => {\n                         if(res.data.sent == true){\n                         // SI le compte est créer et l'email de vérification est envoyé\n                         // Un message de succés sera affiché\n\n                         this.setState({ MessageSucces : res.data.sent })}\n                         // Si le compte existe déja ou une adresse email invalide est entrée un message d'erreur sera affiché\n\n                         else this.setState({MessageError : true, ContenuMessageError : res.data.sent})\n                      });\n                    \n                    } else {\n                      this.setState({ MotDePasseDifferent: true });\n                    }\n\n                  }}\n                >\n                  Submit\n                </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\" hideRequiredMark>\n            <Form.Item\n              name=\"name\"\n              label=\"Email\"\n              rules={[{ required: true, message: \"Please enter Email\" }]}\n            >\n              <Input\n                size=\"large\"\n                value={this.state.email}\n                onChange={(event) => {\n                  this.setState({ email: event.target.value });\n                }}\n                placeholder=\"Email \"\n                className=\"input email\"\n                prefix={<UserOutlined />}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"Password\"\n              label=\"Password\"\n              rules={[\n                { required: true, message: \"Please enter user Password\" },\n              ]}\n            >\n              <Input\n                size=\"large\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={this.state.MotDePasse}\n                onChange={(event) => {\n                  this.setState({ MotDePasse: event.target.value });\n                }}\n                className=\"input email\"\n                prefix={<UnlockOutlined />}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"Confirmation Password\"\n              label=\"Confirmation Password\"\n              rules={[\n                { required: true, message: \"Please enter user Password\" },\n              ]}\n            >\n              <Input\n                size=\"large\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={this.state.ConfirmationMotDePasse}\n                onChange={(event) => {\n                  this.setState({ ConfirmationMotDePasse: event.target.value });\n                }}\n                className=\"input email\"\n                prefix={<UnlockOutlined />}\n              />\n            </Form.Item>\n            {this.state.MotDePasseDifferent && (\n              <Form.Item name=\"\" label=\"\">\n                {\" \"}\n                <text style={{ fontSize: 30 }}>\n                  {\" \"}\n                  Les Mot De Passe ne correspondent pas{\" \"}\n                </text>\n              </Form.Item>\n            )}\n             {this.state.MessageSucces && (\n               <div>\n              <Form.Item name=\"\" label=\"\">\n                {\" \"}\n                <text style={{ marginTop : 30, fontSize: 30 , color :'green' }}>\n                  {\" \"}\n                 Compte ajouté avec succées !\n                </text>\n                \n              </Form.Item>\n                            <Form.Item name=\"\" label=\"\">\n\n              <text style={{ marginTop : 20, fontSize: 17 , color :'blue',fontFamily : \"500\" }}>\n                  {\" \"}\n                Veuillez valider votre mail par le lien envoyé, pour pouvoir se connecter\n                </text>\n                </Form.Item>\n                </div>\n\n            )}\n             {this.state.MessageError && (\n               <div>\n              <Form.Item name=\"\" label=\"\">\n                {\" \"}\n                <text style={{ marginTop : 30, fontSize: 24 , color :'red' }}>\n                  {this.state.ContenuMessageError}\n                </text>\n                \n              </Form.Item>\n            \n                </div>\n\n            )}\n            </Form> \n        </Drawer>\n      </div>\n    );\n  } \n}\n\nexport default Signup;\n","/home/karim/Bureau/ProjetWeb/frontend/src/Component/PageHome.js",["56","57","58","59","60","61","62"],"/home/karim/Bureau/ProjetWeb/frontend/src/Component/Card.js",[],"/home/karim/Bureau/ProjetWeb/frontend/src/Component/Header.js",["63","64","65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":22,"column":7,"nodeType":"77","endLine":22,"endColumn":41},{"ruleId":"71","severity":1,"message":"78","line":100,"column":31,"nodeType":"73","messageId":"74","endLine":100,"endColumn":40},{"ruleId":"71","severity":1,"message":"79","line":101,"column":31,"nodeType":"73","messageId":"74","endLine":101,"endColumn":43},{"ruleId":"71","severity":1,"message":"80","line":132,"column":31,"nodeType":"73","messageId":"74","endLine":132,"endColumn":36},{"ruleId":"71","severity":1,"message":"81","line":134,"column":31,"nodeType":"73","messageId":"74","endLine":134,"endColumn":35},{"ruleId":"71","severity":1,"message":"78","line":140,"column":31,"nodeType":"73","messageId":"74","endLine":140,"endColumn":40},{"ruleId":"71","severity":1,"message":"79","line":141,"column":31,"nodeType":"73","messageId":"74","endLine":141,"endColumn":43},{"ruleId":"71","severity":1,"message":"82","line":143,"column":31,"nodeType":"73","messageId":"74","endLine":143,"endColumn":36},{"ruleId":"71","severity":1,"message":"83","line":145,"column":31,"nodeType":"73","messageId":"74","endLine":145,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":38,"column":9,"nodeType":"77","endLine":38,"endColumn":64},{"ruleId":"86","severity":1,"message":"87","line":74,"column":43,"nodeType":"88","messageId":"89","endLine":74,"endColumn":45},{"ruleId":"71","severity":1,"message":"90","line":2,"column":9,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"91","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"92","line":10,"column":8,"nodeType":"73","messageId":"74","endLine":10,"endColumn":21},{"ruleId":"71","severity":1,"message":"93","line":38,"column":16,"nodeType":"73","messageId":"74","endLine":38,"endColumn":24},{"ruleId":"71","severity":1,"message":"94","line":40,"column":10,"nodeType":"73","messageId":"74","endLine":40,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":53,"column":24,"nodeType":"97","messageId":"98","endLine":53,"endColumn":25,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":57,"column":8,"nodeType":"102","endLine":57,"endColumn":10,"suggestions":"103"},{"ruleId":"71","severity":1,"message":"104","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"105","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":35},{"ruleId":"71","severity":1,"message":"106","line":9,"column":8,"nodeType":"73","messageId":"74","endLine":9,"endColumn":11},{"ruleId":"71","severity":1,"message":"107","line":10,"column":8,"nodeType":"73","messageId":"74","endLine":10,"endColumn":17},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'token' is assigned a value but never used.","'user' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'auth' is defined but never used.","'Link' is defined but never used.","'ListSubheader' is defined but never used.","'setProps' is assigned a value but never used.","'Tab' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["110","111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Props.CurrentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"113","fix":"114","desc":"115"},{"messageId":"116","fix":"117","desc":"118"},{"desc":"119","fix":"120"},"removeEscape",{"range":"121","text":"122"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"123","text":"124"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [Props.CurrentUser.email]",{"range":"125","text":"126"},[1742,1743],"",[1742,1742],"\\",[1821,1823],"[Props.CurrentUser.email]"]